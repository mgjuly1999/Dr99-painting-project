package com.coder.model;
// Generated Jan 23, 2021 7:50:44 PM by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * OrderForm generated by hbm2java
 */
@Entity
@Table(name = "order_form", catalog = "drnineni_paint_shop")
public class OrderForm implements java.io.Serializable {

	private Integer orderFormId;
	private DeliveryAddress deliveryAddress;
	private DeliveryType deliveryType;
	private OrderStatus orderStatus;
	private PaymentMethod paymentMethod;
	private String phone;
	private String addressDetails;
	private Date createDate;
	private double totalDicountRate;
	private double totalPrice;
	private String note;
	private Set<ProductOrder> productOrders = new HashSet<ProductOrder>(0);
	private Set<Member> members = new HashSet<Member>(0);

	public OrderForm() {
	}

	public OrderForm(DeliveryAddress deliveryAddress, DeliveryType deliveryType, OrderStatus orderStatus,
			PaymentMethod paymentMethod, String phone, String addressDetails, Date createDate, double totalDicountRate,
			double totalPrice) {
		this.deliveryAddress = deliveryAddress;
		this.deliveryType = deliveryType;
		this.orderStatus = orderStatus;
		this.paymentMethod = paymentMethod;
		this.phone = phone;
		this.addressDetails = addressDetails;
		this.createDate = createDate;
		this.totalDicountRate = totalDicountRate;
		this.totalPrice = totalPrice;
	}

	public OrderForm(DeliveryAddress deliveryAddress, DeliveryType deliveryType, OrderStatus orderStatus,
			PaymentMethod paymentMethod, String phone, String addressDetails, Date createDate, double totalDicountRate,
			double totalPrice, String note, Set<ProductOrder> productOrders, Set<Member> members) {
		this.deliveryAddress = deliveryAddress;
		this.deliveryType = deliveryType;
		this.orderStatus = orderStatus;
		this.paymentMethod = paymentMethod;
		this.phone = phone;
		this.addressDetails = addressDetails;
		this.createDate = createDate;
		this.totalDicountRate = totalDicountRate;
		this.totalPrice = totalPrice;
		this.note = note;
		this.productOrders = productOrders;
		this.members = members;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "order_form_id", unique = true, nullable = false)
	public Integer getOrderFormId() {
		return this.orderFormId;
	}

	public void setOrderFormId(Integer orderFormId) {
		this.orderFormId = orderFormId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "delivery_address_id", nullable = false)
	public DeliveryAddress getDeliveryAddress() {
		return this.deliveryAddress;
	}

	public void setDeliveryAddress(DeliveryAddress deliveryAddress) {
		this.deliveryAddress = deliveryAddress;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "delivery_type_id", nullable = false)
	public DeliveryType getDeliveryType() {
		return this.deliveryType;
	}

	public void setDeliveryType(DeliveryType deliveryType) {
		this.deliveryType = deliveryType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "status_id", nullable = false)
	public OrderStatus getOrderStatus() {
		return this.orderStatus;
	}

	public void setOrderStatus(OrderStatus orderStatus) {
		this.orderStatus = orderStatus;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "payment_method_id", nullable = false)
	public PaymentMethod getPaymentMethod() {
		return this.paymentMethod;
	}

	public void setPaymentMethod(PaymentMethod paymentMethod) {
		this.paymentMethod = paymentMethod;
	}

	@Column(name = "phone", nullable = false, length = 100)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "address_details", nullable = false, length = 1500)
	public String getAddressDetails() {
		return this.addressDetails;
	}

	public void setAddressDetails(String addressDetails) {
		this.addressDetails = addressDetails;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "create_date", nullable = false, length = 10)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "total_dicount_rate", nullable = false, precision = 22, scale = 0)
	public double getTotalDicountRate() {
		return this.totalDicountRate;
	}

	public void setTotalDicountRate(double totalDicountRate) {
		this.totalDicountRate = totalDicountRate;
	}

	@Column(name = "total_price", nullable = false, precision = 22, scale = 0)
	public double getTotalPrice() {
		return this.totalPrice;
	}

	public void setTotalPrice(double totalPrice) {
		this.totalPrice = totalPrice;
	}

	@Column(name = "note", length = 2000)
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orderForm")
	public Set<ProductOrder> getProductOrders() {
		return this.productOrders;
	}

	public void setProductOrders(Set<ProductOrder> productOrders) {
		this.productOrders = productOrders;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "member_order_form", catalog = "drnineni_paint_shop", joinColumns = {
			@JoinColumn(name = "order_form_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "member_id", nullable = false, updatable = false) })
	public Set<Member> getMembers() {
		return this.members;
	}

	public void setMembers(Set<Member> members) {
		this.members = members;
	}

}
