package com.coder.model;
// Generated Jan 23, 2021 7:50:44 PM by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", catalog = "drnineni_paint_shop")
public class Product implements java.io.Serializable {

	private Integer productId;
	private Admin admin;
	private ProductStatus productStatus;
	private ProductQuality productQuality;
	private ProductType productType;
	private QtyUnit qtyUnit;
	private Date createDate;
	private int totalQty;
	private Set<ColorGroup> colorGroups = new HashSet<ColorGroup>(0);
	private Set<FreeTool> freeTools = new HashSet<FreeTool>(0);
	private Set<ProductMedia> productMedias = new HashSet<ProductMedia>(0);
	private Set<Feature> features = new HashSet<Feature>(0);
	private Set<AboutProductLanguage> aboutProductLanguages = new HashSet<AboutProductLanguage>(0);
	private Set<Discount> discounts = new HashSet<Discount>(0);
	private Set<ProductOrder> productOrders = new HashSet<ProductOrder>(0);
	private Set<Litreage> litreages = new HashSet<Litreage>(0);
	private Set<Guide> guides = new HashSet<Guide>(0);
	private Set<ProductTitleLanguage> productTitleLanguages = new HashSet<ProductTitleLanguage>(0);

	public Product() {
	}

	public Product(Admin admin, ProductStatus productStatus, ProductType productType, QtyUnit qtyUnit, Date createDate,
			int totalQty) {
		this.admin = admin;
		this.productStatus = productStatus;
		this.productType = productType;
		this.qtyUnit = qtyUnit;
		this.createDate = createDate;
		this.totalQty = totalQty;
	}

	public Product(Admin admin, ProductStatus productStatus, ProductType productType, QtyUnit qtyUnit, Date createDate,
			int totalQty, Set<ColorGroup> colorGroups, Set<FreeTool> freeTools, Set<ProductMedia> productMedias,
			Set<Feature> features, Set<AboutProductLanguage> aboutProductLanguages, Set<Discount> discounts,
			Set<ProductOrder> productOrders, Set<Litreage> litreages, Set<Guide> guides,
			Set<ProductTitleLanguage> productTitleLanguages) {
		this.admin = admin;
		this.productStatus = productStatus;
		this.productType = productType;
		this.qtyUnit = qtyUnit;
		this.createDate = createDate;
		this.totalQty = totalQty;
		this.colorGroups = colorGroups;
		this.freeTools = freeTools;
		this.productMedias = productMedias;
		this.features = features;
		this.aboutProductLanguages = aboutProductLanguages;
		this.discounts = discounts;
		this.productOrders = productOrders;
		this.litreages = litreages;
		this.guides = guides;
		this.productTitleLanguages = productTitleLanguages;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "product_id", unique = true, nullable = false)
	public Integer getProductId() {
		return this.productId;
	}

	public void setProductId(Integer productId) {
		this.productId = productId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "admin_id", nullable = false)
	public Admin getAdmin() {
		return this.admin;
	}

	public void setAdmin(Admin admin) {
		this.admin = admin;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status_id", nullable = false)
	public ProductStatus getProductStatus() {
		return this.productStatus;
	}

	public void setProductStatus(ProductStatus productStatus) {
		this.productStatus = productStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_quality_id", nullable = false)
	public ProductQuality getProductQuality() {
		return productQuality;
	}

	public void setProductQuality(ProductQuality productQuality) {
		this.productQuality = productQuality;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_type_id", nullable = false)
	public ProductType getProductType() {
		return this.productType;
	}

	public void setProductType(ProductType productType) {
		this.productType = productType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "qty_unit_id", nullable = false)
	public QtyUnit getQtyUnit() {
		return this.qtyUnit;
	}

	public void setQtyUnit(QtyUnit qtyUnit) {
		this.qtyUnit = qtyUnit;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "create_date", nullable = false, length = 10)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "total_qty", nullable = false)
	public int getTotalQty() {
		return this.totalQty;
	}

	public void setTotalQty(int totalQty) {
		this.totalQty = totalQty;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "product_color_group", catalog = "drnineni_paint_shop", joinColumns = {
			@JoinColumn(name = "product_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "color_group_id", nullable = false, updatable = false) })
	public Set<ColorGroup> getColorGroups() {
		return this.colorGroups;
	}

	public void setColorGroups(Set<ColorGroup> colorGroups) {
		this.colorGroups = colorGroups;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "product_free_tool", catalog = "drnineni_paint_shop", joinColumns = {
			@JoinColumn(name = "product_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "tool_id", nullable = false, updatable = false) })
	public Set<FreeTool> getFreeTools() {
		return this.freeTools;
	}

	public void setFreeTools(Set<FreeTool> freeTools) {
		this.freeTools = freeTools;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<ProductMedia> getProductMedias() {
		return this.productMedias;
	}

	public void setProductMedias(Set<ProductMedia> productMedias) {
		this.productMedias = productMedias;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "product_feature", catalog = "drnineni_paint_shop", joinColumns = {
			@JoinColumn(name = "product_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "feature_id", nullable = false, updatable = false) })
	public Set<Feature> getFeatures() {
		return this.features;
	}

	public void setFeatures(Set<Feature> features) {
		this.features = features;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<AboutProductLanguage> getAboutProductLanguages() {
		return this.aboutProductLanguages;
	}

	public void setAboutProductLanguages(Set<AboutProductLanguage> aboutProductLanguages) {
		this.aboutProductLanguages = aboutProductLanguages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Discount> getDiscounts() {
		return this.discounts;
	}

	public void setDiscounts(Set<Discount> discounts) {
		this.discounts = discounts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<ProductOrder> getProductOrders() {
		return this.productOrders;
	}

	public void setProductOrders(Set<ProductOrder> productOrders) {
		this.productOrders = productOrders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Litreage> getLitreages() {
		return this.litreages;
	}

	public void setLitreages(Set<Litreage> litreages) {
		this.litreages = litreages;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "product_guide", catalog = "drnineni_paint_shop", joinColumns = {
			@JoinColumn(name = "product_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "guide_id", nullable = false, updatable = false) })
	public Set<Guide> getGuides() {
		return this.guides;
	}

	public void setGuides(Set<Guide> guides) {
		this.guides = guides;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<ProductTitleLanguage> getProductTitleLanguages() {
		return this.productTitleLanguages;
	}

	public void setProductTitleLanguages(Set<ProductTitleLanguage> productTitleLanguages) {
		this.productTitleLanguages = productTitleLanguages;
	}

}
